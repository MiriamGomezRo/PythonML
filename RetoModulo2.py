# -*- coding: utf-8 -*-
"""DSAI - M2 - 04 - Retos Aprender.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1112QEzotuZKA0_XjEQyn-WHwdVCM-5lN

#Solución de Retos DSAI - M2 Aprender

**Tema 1: Plataformas / Frameworks**

Crea un nuevo Notebook

*   Verifica si en tu entorno de Colab ya están disponibles las plataformas:
     *   numpy
     *   pandas
*   En caso de que alguna no esté disponible, instálala.
"""

!pip show numpy

!pip show pandas

"""**Tema 2: Arreglos y matrices con NumPy**

**Subtema 2.1 Arreglos**

Crear dos arreglos de 7 números enteros con la función arange
"""

import numpy as np
arr1 = np.arange(1, 71, 10)
arr2 = np.arange(17, 3, -2)
print('arr1: ', arr1)
print('arr2: ', arr2)

"""Obtener el promedio de los mínimos de ambos arreglos"""

prom = (arr1.min() + arr2.min())/2
print('Promedio de los mínimos de ambos arreglos: ', prom)

"""Obtener los elementos de las posiciones pares del primer arreglo"""

print('Elementos de las posiciones pares del primer arreglo: ', arr1[1::2])

"""Sumar ambos arreglos, ordenar el resultado y obtener los tres primeros elementos del resultado"""

sumaArr = arr1 + arr2
print('Suma de los arreglos: ', sumaArr)
sumaArr.sort()
print('Los tres primeros elementos son: ', sumaArr[:3])

"""**Subtema 2.2 Matrices**

Definir dos matrices de 5x4 con elementos en serie
"""

import numpy as np
matriz1 = np.arange(5, 101, 5).reshape(5, 4)
matriz2 = np.arange(400, 0, -20).reshape(5, 4)
print('matriz1: \n', matriz1)
print('matriz2: \n', matriz2)

"""Obtener el mínimo y máximo de la primera matriz"""

print('Mínimo de la primera matriz: ', matriz1.min())
print('Máximo de la primera matriz: ', matriz1.max())

"""La suma de todas las columnas de la primera matriz"""

print('Suma de todas las columnas de la primera matriz: \n', matriz1.sum(axis=0))

"""La suma de todos los elementos de la segunda y tercer fila de la primera matriz"""

print('Suma de todos los elementos de la segunda y tercer fila de la primera matriz: ', (matriz1[1]+matriz1[2]).sum())

"""La suma de los elementos de la tercera y quinta fila de la primera matriz"""

print('Suma de los elementos de la tercera y quinta fila de la primera matriz: \n', matriz1.sum(axis=1)[2:5:2])

"""La suma de las dos matrices"""

sumaMatrices = matriz1 + matriz2
print('Suma de las matrices: \n', sumaMatrices)

"""**Tema 3: Estructuras de datos en Pandas**

**Subtema 3.1 Series y Dataframes**

Crear un dataframe que contenga 5 registros de deportistas famosos con su nombre y el deporte que practican
"""

import pandas as pd
deportistas = pd.DataFrame({
   "Nombre": pd.Series(['Micheal Jordan', 'Lionel Messi', 'Tom Brady', 'Serena Williams']),
   "Deporte": pd.Series(['Baloncesto', 'Fútbol', 'Fútbol Americanco', 'Tenis'])
})
deportistas

"""Agrega una columna de edad con sus valores correspondientes"""

edad = pd.Series([58, 33, 43, 39])
print('Edad: \n', edad)
deportistas['Edad'] = edad
print('Deportistas: ')
deportistas

"""Agrega otra columna con nombre "estado", donde todos los registros contengan el valor "ACTIVO"
"""

deportistas['estado'] = 'ACTIVO'
deportistas

"""**Tema 4: Manipulando datos Tabulares con Pandas**

**Tema 4.1 Leyendo datos tabulares con Pandas**

Leer archivo
"""

import pandas as pd
#tweets = pd.read_csv('/content/drive/MyDrive/Colab Notebooks/TLG/vaccination_tweets.csv')
tweets = pd.read_csv('/content/vaccination_tweets.csv')
tweets

"""Mostrar los primeros 7 registros"""

tweets.head(7)

"""Mostrar los últimos 4 registros"""

tweets.tail(4)

"""Mostrar la estructura del dataframe y comentar la cantidad de columnas y el tipo de información que contiene"""

tweets.info()

"""**Tema 4.2 Escribiendo datos tabulares con Pandas**

Leer el archivo
"""

tweets = pd.read_csv('/content/vaccination_tweets.csv')
tweets

"""Eliminar la mitad de los registros del dataframe y las columnas necesarias para mantaner solo cuatro de ellas."""

tweets = tweets[0::2][['user_name', 'user_description', 'user_followers', 'user_friends']]
tweets

"""Almacenar el nuevo dataframe en un archivo separado por comas llamado "someCharacters.csv"
"""

tweets.to_csv('/content/someCharacters.csv')

"""almacenar el nuevo dataframe en un archivo de Excel llamado "someCharacters.xlsx"
"""

tweets.to_excel('/content/someCharacters.xlsx')