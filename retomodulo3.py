# -*- coding: utf-8 -*-
"""RetoModulo3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Sd4si7JQnA5pJzD4nxAu7e3AfZYCJnMR

Cargar Drive
"""

from google.colab import drive
drive.mount('/content/gdrive')

"""Leer Archivo Train"""

import pandas as pd
TrainDF= pd.read_csv('/content/gdrive/MyDrive/Colab Notebooks/Modulo 3/Reto/Train.csv')
TrainDF

"""Leer Test"""

TestDF=pd.read_csv('/content/gdrive/MyDrive/Colab Notebooks/Modulo 3/Reto/Test.csv')
TestDF

"""Comparando Dataframes"""

TrainDF.info()
TestDF.info()

"""Sobra una columna llamada Attrition_rate, no elegirla en el siguiente DF"""

TrainDF2 = TrainDF[['Employee_ID', 'Gender','Age','Education_Level','Relationship_Status','Hometown','Unit','Decision_skill_possess','Time_of_service','Time_since_promotion','growth_rate','Travel_Rate','Post_Level','Pay_Scale','Compensation_and_Benefits','Work_Life_balance','VAR1','VAR2','VAR3','VAR4','VAR5','VAR6','VAR7']]
TrainDF2

"""HAcer Union entre TestDF y TrainDF2"""

AllEmployees = pd.concat([TestDF, TrainDF2], ignore_index=True)
AllEmployees

!pip install xlsxwriter
import pandas as pd
import numpy as np
import xlsxwriter

with pd.ExcelWriter('/content/gdrive/MyDrive/Colab Notebooks/Modulo 3/Reto/AllEmployees.xlsx', engine='xlsxwriter') as writer:
    AllEmployees.to_excel(writer, sheet_name='AllEmployees')

"""Unir Test2 y Train2"""

Test2DF=pd.read_csv('/content/gdrive/MyDrive/Colab Notebooks/Modulo 3/Reto/Test2.csv')
Test2DF

"""Leer Train2"""

Train2DF = pd.read_csv('/content/gdrive/MyDrive/Colab Notebooks/Modulo 3/Reto/Train2.csv')
Train2DF

"""Unir Train2DF y Test2DF"""

OSDF=pd.concat([Test2DF, Train2DF], ignore_index=True)
OSDF

!pip install xlsxwriter
import pandas as pd
import numpy as np
import xlsxwriter

with pd.ExcelWriter('/content/gdrive/MyDrive/Colab Notebooks/Modulo 3/Reto/OSDF.xlsx', engine='xlsxwriter') as writer:
    OSDF.to_excel(writer, sheet_name='OSDF')

"""Hacer un Join entre AllEmployees y OSDF"""

JoinTotalDF=AllEmployees.merge(OSDF,left_on='Employee_ID', right_on='Employee_ID',  how = 'left')
JoinTotalDF

"""Resetear Index"""

JoinTotalDF=JoinTotalDF.reset_index(drop=True)
JoinTotalDF

!pip install xlsxwriter
import pandas as pd
import numpy as np
import xlsxwriter

with pd.ExcelWriter('/content/gdrive/MyDrive/Colab Notebooks/Modulo 3/Reto/AntesRename.xlsx', engine='xlsxwriter') as writer:
    JoinTotalDF.to_excel(writer, sheet_name='AntesRename')

"""Asignar valor no registrado en SO Movil o de computadora"""

JoinTotalDF.columns

import numpy as np
JoinTotalDF.loc[(pd.isna(JoinTotalDF[" Computer_OS"]))," Computer_OS"] = "no registrado"
JoinTotalDF.loc[(pd.isna(JoinTotalDF[" Mobile_OS"]))," Mobile_OS"] = "no registrado"

JoinTotalDF

!pip install xlsxwriter
import pandas as pd
import numpy as np
import xlsxwriter

with pd.ExcelWriter('/content/gdrive/MyDrive/Colab Notebooks/Modulo 3/Reto/DespuesUpdate.xlsx', engine='xlsxwriter') as writer:
    JoinTotalDF.to_excel(writer, sheet_name='DespuesUpdate')

"""El porcentaje de personas que usan Windows/MAC/Linux/no registrado como su sistema operativo en su computadora"""

import numpy as np
DF1=JoinTotalDF.groupby(by = [" Computer_OS"]).agg({" Computer_OS": np.size, "Employee_ID":np.size})
DF1
DF1["Porcentaje"] = DF1[" Computer_OS"]/ DF1["Employee_ID"].sum()
DF1

"""El porcentaje de personas que usan IOS/ Android/no registrado como su sistema operativo en su computadora"""

import numpy as np
DF2=JoinTotalDF.groupby(by = [" Mobile_OS"]).agg({" Mobile_OS": np.size, "Employee_ID":np.size})
DF2
DF2["Porcentaje"] = DF2[" Mobile_OS"]/ DF1["Employee_ID"].sum()
DF2

"""La edad promedio de la gente que utiliza cada sistema operativo de escritorio"""

import numpy as np
DF3=JoinTotalDF.groupby(by = [" Computer_OS"]).agg({" Computer_OS": np.size, "Age":np.mean})
DF3

"""El nivel educativo promedio de la gente que utiliza cada sistema operativo de escritorio"""

import numpy as np
DF4=JoinTotalDF.groupby(by = [" Computer_OS"]).agg({" Computer_OS": np.size, "Education_Level":np.mean})
DF4

"""El numero total de tickets generados por la gente con cada sistema operativo de escritorio"""

import numpy as np
DF5=JoinTotalDF.groupby(by = [" Computer_OS"]).agg({" Computer_OS": np.size, " Computer_tickets":np.sum})
DF5

"""Enviar el resultado de cada solicitud de informacion a un archivo XLSX, donde el resultado de cada consulta debe ir en su propia hoja de trabajo"""

!pip install xlsxwriter

import pandas as pd
import numpy as np
import xlsxwriter

with pd.ExcelWriter('/content/gdrive/MyDrive/Colab Notebooks/Modulo 3/Reto/FinalResult.xlsx', engine='xlsxwriter') as writer:
    DF1.to_excel(writer, sheet_name='DF1')
    DF2.to_excel(writer, sheet_name='DF2')
    DF3.to_excel(writer, sheet_name='DF3')
    DF4.to_excel(writer, sheet_name='DF4')
    DF5.to_excel(writer, sheet_name='DF5')